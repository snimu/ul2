# Save the results in independent files; there was a problem with saving them all in the same one before.
# Really lower the gpu_capacity_scalar to avoid CUDA OOM errors.
python main.py -cw --logfile results_five1.csv --wandb_project ul2.five --model_scale 5.0 --seed 1400 --gpu_capacity_scalar 1.0 --num_runs 5 --ul2 --causal_divider 1.0 1.0 2.0 4.0 --s_divider 1.0 6.0 6.0 4.0 --r_divider 1.0 6.0 6.0 4.0 --x_divider 1.0 6.0 6.0 4.0 --causal_denoisers
python main.py -cw --logfile results_five2.csv --wandb_project ul2.five --model_scale 5.0 --seed 1400 --gpu_capacity_scalar 1.0 --num_runs 5 --ul2 --causal_divider 1.0 1.0 2.0 4.0 --s_divider 1.0 6.0 6.0 4.0 --r_divider 1.0 6.0 6.0 4.0 --x_divider 1.0 6.0 6.0 4.0 --causal_denoisers --randomize_mask_width
python main.py -cw --logfile results_five3.csv --wandb_project ul2.five --model_scale 5.0 --seed 1400 --gpu_capacity_scalar 1.0 --num_runs 5 --ul2 --causal_divider 1.0 1.0 2.0 4.0 --s_divider 1.0 6.0 6.0 4.0 --r_divider 1.0 6.0 6.0 4.0 --x_divider 1.0 6.0 6.0 4.0 --causal_denoisers --randomize_denoiser_settings
python main.py -cw --logfile results_five4.csv --wandb_project ul2.five --model_scale 5.0 --seed 1400 --gpu_capacity_scalar 1.0 --num_runs 5 --ul2 --causal_divider 1.0 1.0 2.0 4.0 --s_divider 1.0 6.0 6.0 4.0 --r_divider 1.0 6.0 6.0 4.0 --x_divider 1.0 6.0 6.0 4.0 --causal_denoisers --randomize_denoiser_settings --randomize_mask_width
python main.py -cw --logfile results_five5.csv --wandb_project ul2.five --model_scale 5.0 --seed 1400 --gpu_capacity_scalar 1.0 --num_runs 5